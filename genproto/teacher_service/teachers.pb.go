// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: teachers.proto

package teacher_service

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TeacherPrimaryKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *TeacherPrimaryKey) Reset() {
	*x = TeacherPrimaryKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachers_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeacherPrimaryKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeacherPrimaryKey) ProtoMessage() {}

func (x *TeacherPrimaryKey) ProtoReflect() protoreflect.Message {
	mi := &file_teachers_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeacherPrimaryKey.ProtoReflect.Descriptor instead.
func (*TeacherPrimaryKey) Descriptor() ([]byte, []int) {
	return file_teachers_proto_rawDescGZIP(), []int{0}
}

func (x *TeacherPrimaryKey) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateTeacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId           string  `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	Birthday           string  `protobuf:"bytes,2,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Gender             string  `protobuf:"bytes,3,opt,name=gender,proto3" json:"gender,omitempty"`
	Fullname           string  `protobuf:"bytes,4,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Email              string  `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Phone              string  `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	UserPassword       string  `protobuf:"bytes,7,opt,name=user_password,json=userPassword,proto3" json:"user_password,omitempty"`
	Salary             float64 `protobuf:"fixed64,8,opt,name=salary,proto3" json:"salary,omitempty"`
	IeltsScore         float64 `protobuf:"fixed64,9,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
	IeltsAttemptsCount int32   `protobuf:"varint,10,opt,name=ielts_attempts_count,json=ieltsAttemptsCount,proto3" json:"ielts_attempts_count,omitempty"`
	StartWorking       string  `protobuf:"bytes,11,opt,name=start_working,json=startWorking,proto3" json:"start_working,omitempty"`
	EndWorking         string  `protobuf:"bytes,12,opt,name=end_working,json=endWorking,proto3" json:"end_working,omitempty"`
}

func (x *CreateTeacher) Reset() {
	*x = CreateTeacher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachers_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTeacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeacher) ProtoMessage() {}

func (x *CreateTeacher) ProtoReflect() protoreflect.Message {
	mi := &file_teachers_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeacher.ProtoReflect.Descriptor instead.
func (*CreateTeacher) Descriptor() ([]byte, []int) {
	return file_teachers_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTeacher) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *CreateTeacher) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *CreateTeacher) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *CreateTeacher) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *CreateTeacher) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *CreateTeacher) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateTeacher) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

func (x *CreateTeacher) GetSalary() float64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *CreateTeacher) GetIeltsScore() float64 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

func (x *CreateTeacher) GetIeltsAttemptsCount() int32 {
	if x != nil {
		return x.IeltsAttemptsCount
	}
	return 0
}

func (x *CreateTeacher) GetStartWorking() string {
	if x != nil {
		return x.StartWorking
	}
	return ""
}

func (x *CreateTeacher) GetEndWorking() string {
	if x != nil {
		return x.EndWorking
	}
	return ""
}

type GetTeacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId           string  `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	UserLogin          string  `protobuf:"bytes,2,opt,name=user_login,json=userLogin,proto3" json:"user_login,omitempty"`
	Birthday           string  `protobuf:"bytes,3,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Gender             string  `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`
	Fullname           string  `protobuf:"bytes,5,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Email              string  `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Phone              string  `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty"`
	Salary             float64 `protobuf:"fixed64,8,opt,name=salary,proto3" json:"salary,omitempty"`
	IeltsScore         float64 `protobuf:"fixed64,9,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
	IeltsAttemptsCount int32   `protobuf:"varint,10,opt,name=ielts_attempts_count,json=ieltsAttemptsCount,proto3" json:"ielts_attempts_count,omitempty"`
	StartWorking       string  `protobuf:"bytes,11,opt,name=start_working,json=startWorking,proto3" json:"start_working,omitempty"`
	EndWorking         string  `protobuf:"bytes,12,opt,name=end_working,json=endWorking,proto3" json:"end_working,omitempty"`
	CreatedAt          string  `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          string  `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Id                 string  `protobuf:"bytes,15,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTeacher) Reset() {
	*x = GetTeacher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachers_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeacher) ProtoMessage() {}

func (x *GetTeacher) ProtoReflect() protoreflect.Message {
	mi := &file_teachers_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeacher.ProtoReflect.Descriptor instead.
func (*GetTeacher) Descriptor() ([]byte, []int) {
	return file_teachers_proto_rawDescGZIP(), []int{2}
}

func (x *GetTeacher) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *GetTeacher) GetUserLogin() string {
	if x != nil {
		return x.UserLogin
	}
	return ""
}

func (x *GetTeacher) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *GetTeacher) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *GetTeacher) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *GetTeacher) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetTeacher) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetTeacher) GetSalary() float64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *GetTeacher) GetIeltsScore() float64 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

func (x *GetTeacher) GetIeltsAttemptsCount() int32 {
	if x != nil {
		return x.IeltsAttemptsCount
	}
	return 0
}

func (x *GetTeacher) GetStartWorking() string {
	if x != nil {
		return x.StartWorking
	}
	return ""
}

func (x *GetTeacher) GetEndWorking() string {
	if x != nil {
		return x.EndWorking
	}
	return ""
}

func (x *GetTeacher) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetTeacher) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *GetTeacher) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type UpdateTeacher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId           string  `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	Birthday           string  `protobuf:"bytes,2,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Gender             string  `protobuf:"bytes,3,opt,name=gender,proto3" json:"gender,omitempty"`
	Fullname           string  `protobuf:"bytes,4,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Email              string  `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Phone              string  `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	Salary             float64 `protobuf:"fixed64,7,opt,name=salary,proto3" json:"salary,omitempty"`
	IeltsScore         float64 `protobuf:"fixed64,8,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
	IeltsAttemptsCount int32   `protobuf:"varint,9,opt,name=ielts_attempts_count,json=ieltsAttemptsCount,proto3" json:"ielts_attempts_count,omitempty"`
	StartWorking       string  `protobuf:"bytes,10,opt,name=start_working,json=startWorking,proto3" json:"start_working,omitempty"`
	EndWorking         string  `protobuf:"bytes,12,opt,name=end_working,json=endWorking,proto3" json:"end_working,omitempty"`
	Id                 string  `protobuf:"bytes,13,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateTeacher) Reset() {
	*x = UpdateTeacher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachers_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTeacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeacher) ProtoMessage() {}

func (x *UpdateTeacher) ProtoReflect() protoreflect.Message {
	mi := &file_teachers_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeacher.ProtoReflect.Descriptor instead.
func (*UpdateTeacher) Descriptor() ([]byte, []int) {
	return file_teachers_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateTeacher) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *UpdateTeacher) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *UpdateTeacher) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *UpdateTeacher) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *UpdateTeacher) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UpdateTeacher) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *UpdateTeacher) GetSalary() float64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *UpdateTeacher) GetIeltsScore() float64 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

func (x *UpdateTeacher) GetIeltsAttemptsCount() int32 {
	if x != nil {
		return x.IeltsAttemptsCount
	}
	return 0
}

func (x *UpdateTeacher) GetStartWorking() string {
	if x != nil {
		return x.StartWorking
	}
	return ""
}

func (x *UpdateTeacher) GetEndWorking() string {
	if x != nil {
		return x.EndWorking
	}
	return ""
}

func (x *UpdateTeacher) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetListTeacherRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Offset int64  `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Limit  int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Search string `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`
}

func (x *GetListTeacherRequest) Reset() {
	*x = GetListTeacherRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachers_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListTeacherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListTeacherRequest) ProtoMessage() {}

func (x *GetListTeacherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teachers_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListTeacherRequest.ProtoReflect.Descriptor instead.
func (*GetListTeacherRequest) Descriptor() ([]byte, []int) {
	return file_teachers_proto_rawDescGZIP(), []int{4}
}

func (x *GetListTeacherRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetListTeacherRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetListTeacherRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

type GetListTeacherResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count    int64         `protobuf:"varint,1,opt,name=Count,proto3" json:"Count,omitempty"`
	Teachers []*GetTeacher `protobuf:"bytes,2,rep,name=Teachers,proto3" json:"Teachers,omitempty"`
}

func (x *GetListTeacherResponse) Reset() {
	*x = GetListTeacherResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachers_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetListTeacherResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetListTeacherResponse) ProtoMessage() {}

func (x *GetListTeacherResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teachers_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetListTeacherResponse.ProtoReflect.Descriptor instead.
func (*GetListTeacherResponse) Descriptor() ([]byte, []int) {
	return file_teachers_proto_rawDescGZIP(), []int{5}
}

func (x *GetListTeacherResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *GetListTeacherResponse) GetTeachers() []*GetTeacher {
	if x != nil {
		return x.Teachers
	}
	return nil
}

type TeacherLoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserLogin    string `protobuf:"bytes,1,opt,name=user_login,json=userLogin,proto3" json:"user_login,omitempty"`
	UserPassword string `protobuf:"bytes,2,opt,name=user_password,json=userPassword,proto3" json:"user_password,omitempty"`
}

func (x *TeacherLoginRequest) Reset() {
	*x = TeacherLoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachers_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeacherLoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeacherLoginRequest) ProtoMessage() {}

func (x *TeacherLoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teachers_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeacherLoginRequest.ProtoReflect.Descriptor instead.
func (*TeacherLoginRequest) Descriptor() ([]byte, []int) {
	return file_teachers_proto_rawDescGZIP(), []int{6}
}

func (x *TeacherLoginRequest) GetUserLogin() string {
	if x != nil {
		return x.UserLogin
	}
	return ""
}

func (x *TeacherLoginRequest) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

type TeacherLoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *TeacherLoginResponse) Reset() {
	*x = TeacherLoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachers_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeacherLoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeacherLoginResponse) ProtoMessage() {}

func (x *TeacherLoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_teachers_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeacherLoginResponse.ProtoReflect.Descriptor instead.
func (*TeacherLoginResponse) Descriptor() ([]byte, []int) {
	return file_teachers_proto_rawDescGZIP(), []int{7}
}

func (x *TeacherLoginResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *TeacherLoginResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type TeacherRegisterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mail string `protobuf:"bytes,1,opt,name=mail,proto3" json:"mail,omitempty"`
}

func (x *TeacherRegisterRequest) Reset() {
	*x = TeacherRegisterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachers_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeacherRegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeacherRegisterRequest) ProtoMessage() {}

func (x *TeacherRegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teachers_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeacherRegisterRequest.ProtoReflect.Descriptor instead.
func (*TeacherRegisterRequest) Descriptor() ([]byte, []int) {
	return file_teachers_proto_rawDescGZIP(), []int{8}
}

func (x *TeacherRegisterRequest) GetMail() string {
	if x != nil {
		return x.Mail
	}
	return ""
}

type TeacherRegisterConfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mail    string           `protobuf:"bytes,1,opt,name=mail,proto3" json:"mail,omitempty"`
	Otp     string           `protobuf:"bytes,2,opt,name=otp,proto3" json:"otp,omitempty"`
	Teacher []*CreateTeacher `protobuf:"bytes,3,rep,name=Teacher,proto3" json:"Teacher,omitempty"`
}

func (x *TeacherRegisterConfRequest) Reset() {
	*x = TeacherRegisterConfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachers_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeacherRegisterConfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeacherRegisterConfRequest) ProtoMessage() {}

func (x *TeacherRegisterConfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_teachers_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeacherRegisterConfRequest.ProtoReflect.Descriptor instead.
func (*TeacherRegisterConfRequest) Descriptor() ([]byte, []int) {
	return file_teachers_proto_rawDescGZIP(), []int{9}
}

func (x *TeacherRegisterConfRequest) GetMail() string {
	if x != nil {
		return x.Mail
	}
	return ""
}

func (x *TeacherRegisterConfRequest) GetOtp() string {
	if x != nil {
		return x.Otp
	}
	return ""
}

func (x *TeacherRegisterConfRequest) GetTeacher() []*CreateTeacher {
	if x != nil {
		return x.Teacher
	}
	return nil
}

type TeacherChangePassword struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserLogin   string `protobuf:"bytes,1,opt,name=UserLogin,proto3" json:"UserLogin,omitempty"`
	OldPassword string `protobuf:"bytes,2,opt,name=OldPassword,proto3" json:"OldPassword,omitempty"`
	NewPassword string `protobuf:"bytes,3,opt,name=NewPassword,proto3" json:"NewPassword,omitempty"`
}

func (x *TeacherChangePassword) Reset() {
	*x = TeacherChangePassword{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachers_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeacherChangePassword) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeacherChangePassword) ProtoMessage() {}

func (x *TeacherChangePassword) ProtoReflect() protoreflect.Message {
	mi := &file_teachers_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeacherChangePassword.ProtoReflect.Descriptor instead.
func (*TeacherChangePassword) Descriptor() ([]byte, []int) {
	return file_teachers_proto_rawDescGZIP(), []int{10}
}

func (x *TeacherChangePassword) GetUserLogin() string {
	if x != nil {
		return x.UserLogin
	}
	return ""
}

func (x *TeacherChangePassword) GetOldPassword() string {
	if x != nil {
		return x.OldPassword
	}
	return ""
}

func (x *TeacherChangePassword) GetNewPassword() string {
	if x != nil {
		return x.NewPassword
	}
	return ""
}

type TeacherChangePasswordResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comment string `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *TeacherChangePasswordResp) Reset() {
	*x = TeacherChangePasswordResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachers_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeacherChangePasswordResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeacherChangePasswordResp) ProtoMessage() {}

func (x *TeacherChangePasswordResp) ProtoReflect() protoreflect.Message {
	mi := &file_teachers_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeacherChangePasswordResp.ProtoReflect.Descriptor instead.
func (*TeacherChangePasswordResp) Descriptor() ([]byte, []int) {
	return file_teachers_proto_rawDescGZIP(), []int{11}
}

func (x *TeacherChangePasswordResp) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type GetTeacherByLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BranchId           string  `protobuf:"bytes,1,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	UserLogin          string  `protobuf:"bytes,2,opt,name=user_login,json=userLogin,proto3" json:"user_login,omitempty"`
	Birthday           string  `protobuf:"bytes,3,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Gender             string  `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`
	Fullname           string  `protobuf:"bytes,5,opt,name=fullname,proto3" json:"fullname,omitempty"`
	Email              string  `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Phone              string  `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty"`
	Salary             float64 `protobuf:"fixed64,8,opt,name=salary,proto3" json:"salary,omitempty"`
	IeltsScore         float64 `protobuf:"fixed64,9,opt,name=ielts_score,json=ieltsScore,proto3" json:"ielts_score,omitempty"`
	IeltsAttemptsCount int32   `protobuf:"varint,10,opt,name=ielts_attempts_count,json=ieltsAttemptsCount,proto3" json:"ielts_attempts_count,omitempty"`
	UserPassword       string  `protobuf:"bytes,11,opt,name=user_password,json=userPassword,proto3" json:"user_password,omitempty"`
	StartWorking       string  `protobuf:"bytes,12,opt,name=start_working,json=startWorking,proto3" json:"start_working,omitempty"`
	EndWorking         string  `protobuf:"bytes,13,opt,name=end_working,json=endWorking,proto3" json:"end_working,omitempty"`
	CreatedAt          string  `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          string  `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Id                 string  `protobuf:"bytes,16,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTeacherByLogin) Reset() {
	*x = GetTeacherByLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_teachers_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTeacherByLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeacherByLogin) ProtoMessage() {}

func (x *GetTeacherByLogin) ProtoReflect() protoreflect.Message {
	mi := &file_teachers_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeacherByLogin.ProtoReflect.Descriptor instead.
func (*GetTeacherByLogin) Descriptor() ([]byte, []int) {
	return file_teachers_proto_rawDescGZIP(), []int{12}
}

func (x *GetTeacherByLogin) GetBranchId() string {
	if x != nil {
		return x.BranchId
	}
	return ""
}

func (x *GetTeacherByLogin) GetUserLogin() string {
	if x != nil {
		return x.UserLogin
	}
	return ""
}

func (x *GetTeacherByLogin) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *GetTeacherByLogin) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *GetTeacherByLogin) GetFullname() string {
	if x != nil {
		return x.Fullname
	}
	return ""
}

func (x *GetTeacherByLogin) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *GetTeacherByLogin) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetTeacherByLogin) GetSalary() float64 {
	if x != nil {
		return x.Salary
	}
	return 0
}

func (x *GetTeacherByLogin) GetIeltsScore() float64 {
	if x != nil {
		return x.IeltsScore
	}
	return 0
}

func (x *GetTeacherByLogin) GetIeltsAttemptsCount() int32 {
	if x != nil {
		return x.IeltsAttemptsCount
	}
	return 0
}

func (x *GetTeacherByLogin) GetUserPassword() string {
	if x != nil {
		return x.UserPassword
	}
	return ""
}

func (x *GetTeacherByLogin) GetStartWorking() string {
	if x != nil {
		return x.StartWorking
	}
	return ""
}

func (x *GetTeacherByLogin) GetEndWorking() string {
	if x != nil {
		return x.EndWorking
	}
	return ""
}

func (x *GetTeacherByLogin) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GetTeacherByLogin) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *GetTeacherByLogin) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_teachers_proto protoreflect.FileDescriptor

var file_teachers_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x12, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x67, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x23, 0x0a, 0x11, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xfe, 0x02, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61,
	0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c,
	0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0a, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x30, 0x0a, 0x14, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74,
	0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x69,
	0x65, 0x6c, 0x74, 0x73, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x5f, 0x77, 0x6f,
	0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x64,
	0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x22, 0xc3, 0x03, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x69, 0x65, 0x6c,
	0x74, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x65, 0x6c, 0x74, 0x73,
	0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x41, 0x74, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xe9, 0x02,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61,
	0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d,
	0x70, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x41, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x77, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x5f,
	0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65,
	0x6e, 0x64, 0x57, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5d, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x6a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x08, 0x54, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x08, 0x54, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x73, 0x22, 0x59, 0x0a, 0x13, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0x5e, 0x0a, 0x14, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0x2c, 0x0a, 0x16, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x7f, 0x0a,
	0x1a, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x10, 0x0a, 0x03, 0x6f, 0x74, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6f, 0x74,
	0x70, 0x12, 0x3b, 0x0a, 0x07, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x07, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x22, 0x79,
	0x0a, 0x15, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x4f, 0x6c, 0x64, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4f, 0x6c, 0x64, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x4e, 0x65,
	0x77, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x35, 0x0a, 0x19, 0x54, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x22, 0xef, 0x03, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x42,
	0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x63, 0x68,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06,
	0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x69, 0x65, 0x6c,
	0x74, 0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x65, 0x6c, 0x74, 0x73,
	0x5f, 0x61, 0x74, 0x74, 0x65, 0x6d, 0x70, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x69, 0x65, 0x6c, 0x74, 0x73, 0x41, 0x74, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x72, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x64, 0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x69,
	0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x64, 0x57, 0x6f, 0x72,
	0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x32, 0xbe, 0x06, 0x0a, 0x0e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4d, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x21, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x1a, 0x1e, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x25, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x50, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x1a, 0x1e, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x54,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a,
	0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x67, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x1a, 0x1e, 0x2e, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x06, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x25, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4b, 0x65, 0x79, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x5c, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x27, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x54, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x2a, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x2e, 0x2e, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x54,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x54,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x29, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x54, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x1a, 0x2d, 0x2e, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x67, 0x6f, 0x2e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x42, 0x1a, 0x5a, 0x18, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_teachers_proto_rawDescOnce sync.Once
	file_teachers_proto_rawDescData = file_teachers_proto_rawDesc
)

func file_teachers_proto_rawDescGZIP() []byte {
	file_teachers_proto_rawDescOnce.Do(func() {
		file_teachers_proto_rawDescData = protoimpl.X.CompressGZIP(file_teachers_proto_rawDescData)
	})
	return file_teachers_proto_rawDescData
}

var file_teachers_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_teachers_proto_goTypes = []interface{}{
	(*TeacherPrimaryKey)(nil),          // 0: teacher_service_go.TeacherPrimaryKey
	(*CreateTeacher)(nil),              // 1: teacher_service_go.CreateTeacher
	(*GetTeacher)(nil),                 // 2: teacher_service_go.GetTeacher
	(*UpdateTeacher)(nil),              // 3: teacher_service_go.UpdateTeacher
	(*GetListTeacherRequest)(nil),      // 4: teacher_service_go.GetListTeacherRequest
	(*GetListTeacherResponse)(nil),     // 5: teacher_service_go.GetListTeacherResponse
	(*TeacherLoginRequest)(nil),        // 6: teacher_service_go.TeacherLoginRequest
	(*TeacherLoginResponse)(nil),       // 7: teacher_service_go.TeacherLoginResponse
	(*TeacherRegisterRequest)(nil),     // 8: teacher_service_go.TeacherRegisterRequest
	(*TeacherRegisterConfRequest)(nil), // 9: teacher_service_go.TeacherRegisterConfRequest
	(*TeacherChangePassword)(nil),      // 10: teacher_service_go.TeacherChangePassword
	(*TeacherChangePasswordResp)(nil),  // 11: teacher_service_go.TeacherChangePasswordResp
	(*GetTeacherByLogin)(nil),          // 12: teacher_service_go.GetTeacherByLogin
	(*empty.Empty)(nil),                // 13: google.protobuf.Empty
}
var file_teachers_proto_depIdxs = []int32{
	2,  // 0: teacher_service_go.GetListTeacherResponse.Teachers:type_name -> teacher_service_go.GetTeacher
	1,  // 1: teacher_service_go.TeacherRegisterConfRequest.Teacher:type_name -> teacher_service_go.CreateTeacher
	1,  // 2: teacher_service_go.TeacherService.Create:input_type -> teacher_service_go.CreateTeacher
	0,  // 3: teacher_service_go.TeacherService.GetByID:input_type -> teacher_service_go.TeacherPrimaryKey
	4,  // 4: teacher_service_go.TeacherService.GetList:input_type -> teacher_service_go.GetListTeacherRequest
	3,  // 5: teacher_service_go.TeacherService.Update:input_type -> teacher_service_go.UpdateTeacher
	0,  // 6: teacher_service_go.TeacherService.Delete:input_type -> teacher_service_go.TeacherPrimaryKey
	6,  // 7: teacher_service_go.TeacherService.Login:input_type -> teacher_service_go.TeacherLoginRequest
	8,  // 8: teacher_service_go.TeacherService.Register:input_type -> teacher_service_go.TeacherRegisterRequest
	9,  // 9: teacher_service_go.TeacherService.RegisterConfirm:input_type -> teacher_service_go.TeacherRegisterConfRequest
	10, // 10: teacher_service_go.TeacherService.ChangePassword:input_type -> teacher_service_go.TeacherChangePassword
	2,  // 11: teacher_service_go.TeacherService.Create:output_type -> teacher_service_go.GetTeacher
	2,  // 12: teacher_service_go.TeacherService.GetByID:output_type -> teacher_service_go.GetTeacher
	5,  // 13: teacher_service_go.TeacherService.GetList:output_type -> teacher_service_go.GetListTeacherResponse
	2,  // 14: teacher_service_go.TeacherService.Update:output_type -> teacher_service_go.GetTeacher
	13, // 15: teacher_service_go.TeacherService.Delete:output_type -> google.protobuf.Empty
	7,  // 16: teacher_service_go.TeacherService.Login:output_type -> teacher_service_go.TeacherLoginResponse
	13, // 17: teacher_service_go.TeacherService.Register:output_type -> google.protobuf.Empty
	7,  // 18: teacher_service_go.TeacherService.RegisterConfirm:output_type -> teacher_service_go.TeacherLoginResponse
	11, // 19: teacher_service_go.TeacherService.ChangePassword:output_type -> teacher_service_go.TeacherChangePasswordResp
	11, // [11:20] is the sub-list for method output_type
	2,  // [2:11] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_teachers_proto_init() }
func file_teachers_proto_init() {
	if File_teachers_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_teachers_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeacherPrimaryKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachers_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTeacher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachers_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeacher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachers_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTeacher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachers_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListTeacherRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachers_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetListTeacherResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachers_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeacherLoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachers_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeacherLoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachers_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeacherRegisterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachers_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeacherRegisterConfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachers_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeacherChangePassword); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachers_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeacherChangePasswordResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_teachers_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTeacherByLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_teachers_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_teachers_proto_goTypes,
		DependencyIndexes: file_teachers_proto_depIdxs,
		MessageInfos:      file_teachers_proto_msgTypes,
	}.Build()
	File_teachers_proto = out.File
	file_teachers_proto_rawDesc = nil
	file_teachers_proto_goTypes = nil
	file_teachers_proto_depIdxs = nil
}
